#!/bin/sh

# Check project identifier
if [ $# -eq 0 ] || [ "${1}" = "" ]; then
    echo "Error: No project identifier supplied."
    exit
fi

id=${1}

if [ ! -f "${id}-properties" ]; then
    echo "Error: No properties found for project identifier ${id}."
    exit
fi

# Check version
if [ $# -eq 0 ] || [ "${2}" = "" ]; then
    echo "Error: No version supplied."
    exit
fi

version=${2}

# Check branch
branch=$(git rev-parse --abbrev-ref HEAD)

if [ "${branch}" != "main" ]; then
    echo "Warning: Not on main branch."
fi

# Get properties
# shellcheck source=java-darts-properties
. "./${id}-properties"

# Process the version
version_label=$(echo ${version,,} | tr " " "-")

# Clone repository
cd ..
git clone . "../darts-${version_label}" 2>/dev/null
cd "../darts-${version_label}" || exit

# Clean up
rm -rf .git
rm -rf scripts
find . -maxdepth 1 -name "*.md" -delete

for i in "${!other_files[@]}"; do
    other_path="${other_files[i]}"
    rm -rf "${other_path}"
done

# Zip
echo -n "" > "zip.log"

for i in "${!labels[@]}"; do
    label="${labels[i]}"
    project="${label_prefix}-${label}"
    path="${label}/${project}"
    file="${project}-${version_label}"

    mv "${path}" "${project}" 2>/dev/null
    rm -rf "${label}"
    rm -rf "${project}/.idea"

    # .tar.gz
    rm -f "${file}.tar.gz"
    7z a "${file}.tar" "./${project}/*" >> "zip.log" 2>> "zip.log"
    7z a -mx9 "${file}.tar.gz" "${file}.tar" >> "zip.log" 2>> "zip.log"
    rm -f "${file}.tar"

    # .zip
    rm -f "${file}.zip"
    7z a -mx9 "${file}.zip" "./${project}/*" >> "zip.log" 2>> "zip.log"
done

# Check zip
archives=$(grep "Everything is Ok" zip.log -c)

if [ "${archives}" -ne $((${#labels[@]} * 3)) ]; then
    echo "Error: Not all archives were created successfully."
    exit
fi
